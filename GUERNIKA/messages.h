/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _MESSAGES_H_RPCGEN
#define _MESSAGES_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif


struct tupla {
	int clave;
	char valor1[255];
	int valor2;
	double valor3;
};
typedef struct tupla tupla;

struct double_key {
	int key1;
	int key2;
};
typedef struct double_key double_key;

#define MESSAGES 1
#define FIRST_VER 1

#if defined(__STDC__) || defined(__cplusplus)
#define init_rpc 1
extern  enum clnt_stat init_rpc_1(int *, CLIENT *);
extern  bool_t init_rpc_1_svc(int *, struct svc_req *);
#define set_value_rpc 2
extern  enum clnt_stat set_value_rpc_1(tupla , int *, CLIENT *);
extern  bool_t set_value_rpc_1_svc(tupla , int *, struct svc_req *);
#define get_value_rpc 3
extern  enum clnt_stat get_value_rpc_1(int , tupla *, CLIENT *);
extern  bool_t get_value_rpc_1_svc(int , tupla *, struct svc_req *);
#define modify_value_rpc 4
extern  enum clnt_stat modify_value_rpc_1(tupla , int *, CLIENT *);
extern  bool_t modify_value_rpc_1_svc(tupla , int *, struct svc_req *);
#define delete_key_rpc 5
extern  enum clnt_stat delete_key_rpc_1(int , int *, CLIENT *);
extern  bool_t delete_key_rpc_1_svc(int , int *, struct svc_req *);
#define exist_rpc 6
extern  enum clnt_stat exist_rpc_1(int , int *, CLIENT *);
extern  bool_t exist_rpc_1_svc(int , int *, struct svc_req *);
#define copy_key_rpc 7
extern  enum clnt_stat copy_key_rpc_1(double_key , int *, CLIENT *);
extern  bool_t copy_key_rpc_1_svc(double_key , int *, struct svc_req *);
extern int messages_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define init_rpc 1
extern  enum clnt_stat init_rpc_1();
extern  bool_t init_rpc_1_svc();
#define set_value_rpc 2
extern  enum clnt_stat set_value_rpc_1();
extern  bool_t set_value_rpc_1_svc();
#define get_value_rpc 3
extern  enum clnt_stat get_value_rpc_1();
extern  bool_t get_value_rpc_1_svc();
#define modify_value_rpc 4
extern  enum clnt_stat modify_value_rpc_1();
extern  bool_t modify_value_rpc_1_svc();
#define delete_key_rpc 5
extern  enum clnt_stat delete_key_rpc_1();
extern  bool_t delete_key_rpc_1_svc();
#define exist_rpc 6
extern  enum clnt_stat exist_rpc_1();
extern  bool_t exist_rpc_1_svc();
#define copy_key_rpc 7
extern  enum clnt_stat copy_key_rpc_1();
extern  bool_t copy_key_rpc_1_svc();
extern int messages_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_tupla (XDR *, tupla*);
extern  bool_t xdr_double_key (XDR *, double_key*);

#else /* K&R C */
extern bool_t xdr_tupla ();
extern bool_t xdr_double_key ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_MESSAGES_H_RPCGEN */
